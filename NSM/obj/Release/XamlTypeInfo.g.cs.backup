//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace NSM
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::NSM.NSM_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::NSM.NSM_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::NSM.NSM_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace NSM.NSM_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[47];
            _typeNameTable[0] = "NSM.About";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "NSM.Common.NavigationHelper";
            _typeNameTable[4] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[5] = "NSM.Common.ObservableDictionary";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "String";
            _typeNameTable[8] = "NSM.Bisection_Method_Calculation";
            _typeNameTable[9] = "Windows.UI.Text.FontWeight";
            _typeNameTable[10] = "System.ValueType";
            _typeNameTable[11] = "NSM.BisectionMethod";
            _typeNameTable[12] = "NSM.FiniteInterpolation";
            _typeNameTable[13] = "NSM.GaussJacobi_calculation";
            _typeNameTable[14] = "NSM.GaussSeidal";
            _typeNameTable[15] = "NSM.GaussSeidal_Calculation";
            _typeNameTable[16] = "NSM.Help.bisection_Help";
            _typeNameTable[17] = "NSM.Help.Finite_Help";
            _typeNameTable[18] = "NSM.Help.Help_Page";
            _typeNameTable[19] = "NSM.Help.Power_Help";
            _typeNameTable[20] = "NSM.Help.Roots_Help";
            _typeNameTable[21] = "NSM.Help.Seidal_Help";
            _typeNameTable[22] = "NSM.Help.Trap_Help";
            _typeNameTable[23] = "NSM.Help.Wedd_Help";
            _typeNameTable[24] = "NSM.Lagranges_Method_Calculation";
            _typeNameTable[25] = "NSM.Finite_Method_GetData_Page";
            _typeNameTable[26] = "NSM.Newton_Backward_Method";
            _typeNameTable[27] = "NSM.NewtonForwardMethod";
            _typeNameTable[28] = "NSM.NR_Root_Calcuation";
            _typeNameTable[29] = "NSM.NRMethos";
            _typeNameTable[30] = "NSM.NRRoots";
            _typeNameTable[31] = "NSM.NumericalGetValuePage";
            _typeNameTable[32] = "NSM.MainPage";
            _typeNameTable[33] = "NSM.NumericalIntegration";
            _typeNameTable[34] = "NSM.PowerMethod";
            _typeNameTable[35] = "NSM.PowerMethod_2X2Calculation";
            _typeNameTable[36] = "NSM.PowerMethod_3X3Calculation";
            _typeNameTable[37] = "NSM.Secant_Method_Calcualtion";
            _typeNameTable[38] = "NSM.Secant_Method";
            _typeNameTable[39] = "NSM.SEttings";
            _typeNameTable[40] = "NSM.Simpson38RuleMethod";
            _typeNameTable[41] = "NSM.Simsons13RuleCalculation";
            _typeNameTable[42] = "NSM.System_of_Linear_Equations";
            _typeNameTable[43] = "NSM.System_of_NonLinear_Equations";
            _typeNameTable[44] = "NSM.TrapezoidalRule";
            _typeNameTable[45] = "NSM.Weddel_s_Rule";
            _typeNameTable[46] = "NSM.Weddels_Rule_Calculation";

            _typeTable = new global::System.Type[47];
            _typeTable[0] = typeof(global::NSM.About);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::NSM.Common.NavigationHelper);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[5] = typeof(global::NSM.Common.ObservableDictionary);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::System.String);
            _typeTable[8] = typeof(global::NSM.Bisection_Method_Calculation);
            _typeTable[9] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[10] = typeof(global::System.ValueType);
            _typeTable[11] = typeof(global::NSM.BisectionMethod);
            _typeTable[12] = typeof(global::NSM.FiniteInterpolation);
            _typeTable[13] = typeof(global::NSM.GaussJacobi_calculation);
            _typeTable[14] = typeof(global::NSM.GaussSeidal);
            _typeTable[15] = typeof(global::NSM.GaussSeidal_Calculation);
            _typeTable[16] = typeof(global::NSM.Help.bisection_Help);
            _typeTable[17] = typeof(global::NSM.Help.Finite_Help);
            _typeTable[18] = typeof(global::NSM.Help.Help_Page);
            _typeTable[19] = typeof(global::NSM.Help.Power_Help);
            _typeTable[20] = typeof(global::NSM.Help.Roots_Help);
            _typeTable[21] = typeof(global::NSM.Help.Seidal_Help);
            _typeTable[22] = typeof(global::NSM.Help.Trap_Help);
            _typeTable[23] = typeof(global::NSM.Help.Wedd_Help);
            _typeTable[24] = typeof(global::NSM.Lagranges_Method_Calculation);
            _typeTable[25] = typeof(global::NSM.Finite_Method_GetData_Page);
            _typeTable[26] = typeof(global::NSM.Newton_Backward_Method);
            _typeTable[27] = typeof(global::NSM.NewtonForwardMethod);
            _typeTable[28] = typeof(global::NSM.NR_Root_Calcuation);
            _typeTable[29] = typeof(global::NSM.NRMethos);
            _typeTable[30] = typeof(global::NSM.NRRoots);
            _typeTable[31] = typeof(global::NSM.NumericalGetValuePage);
            _typeTable[32] = typeof(global::NSM.MainPage);
            _typeTable[33] = typeof(global::NSM.NumericalIntegration);
            _typeTable[34] = typeof(global::NSM.PowerMethod);
            _typeTable[35] = typeof(global::NSM.PowerMethod_2X2Calculation);
            _typeTable[36] = typeof(global::NSM.PowerMethod_3X3Calculation);
            _typeTable[37] = typeof(global::NSM.Secant_Method_Calcualtion);
            _typeTable[38] = typeof(global::NSM.Secant_Method);
            _typeTable[39] = typeof(global::NSM.SEttings);
            _typeTable[40] = typeof(global::NSM.Simpson38RuleMethod);
            _typeTable[41] = typeof(global::NSM.Simsons13RuleCalculation);
            _typeTable[42] = typeof(global::NSM.System_of_Linear_Equations);
            _typeTable[43] = typeof(global::NSM.System_of_NonLinear_Equations);
            _typeTable[44] = typeof(global::NSM.TrapezoidalRule);
            _typeTable[45] = typeof(global::NSM.Weddel_s_Rule);
            _typeTable[46] = typeof(global::NSM.Weddels_Rule_Calculation);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_About() { return new global::NSM.About(); }
        private object Activate_5_ObservableDictionary() { return new global::NSM.Common.ObservableDictionary(); }
        private object Activate_8_Bisection_Method_Calculation() { return new global::NSM.Bisection_Method_Calculation(); }
        private object Activate_11_BisectionMethod() { return new global::NSM.BisectionMethod(); }
        private object Activate_12_FiniteInterpolation() { return new global::NSM.FiniteInterpolation(); }
        private object Activate_13_GaussJacobi_calculation() { return new global::NSM.GaussJacobi_calculation(); }
        private object Activate_14_GaussSeidal() { return new global::NSM.GaussSeidal(); }
        private object Activate_15_GaussSeidal_Calculation() { return new global::NSM.GaussSeidal_Calculation(); }
        private object Activate_16_bisection_Help() { return new global::NSM.Help.bisection_Help(); }
        private object Activate_17_Finite_Help() { return new global::NSM.Help.Finite_Help(); }
        private object Activate_18_Help_Page() { return new global::NSM.Help.Help_Page(); }
        private object Activate_19_Power_Help() { return new global::NSM.Help.Power_Help(); }
        private object Activate_20_Roots_Help() { return new global::NSM.Help.Roots_Help(); }
        private object Activate_21_Seidal_Help() { return new global::NSM.Help.Seidal_Help(); }
        private object Activate_22_Trap_Help() { return new global::NSM.Help.Trap_Help(); }
        private object Activate_23_Wedd_Help() { return new global::NSM.Help.Wedd_Help(); }
        private object Activate_24_Lagranges_Method_Calculation() { return new global::NSM.Lagranges_Method_Calculation(); }
        private object Activate_25_Finite_Method_GetData_Page() { return new global::NSM.Finite_Method_GetData_Page(); }
        private object Activate_26_Newton_Backward_Method() { return new global::NSM.Newton_Backward_Method(); }
        private object Activate_27_NewtonForwardMethod() { return new global::NSM.NewtonForwardMethod(); }
        private object Activate_28_NR_Root_Calcuation() { return new global::NSM.NR_Root_Calcuation(); }
        private object Activate_29_NRMethos() { return new global::NSM.NRMethos(); }
        private object Activate_30_NRRoots() { return new global::NSM.NRRoots(); }
        private object Activate_31_NumericalGetValuePage() { return new global::NSM.NumericalGetValuePage(); }
        private object Activate_32_MainPage() { return new global::NSM.MainPage(); }
        private object Activate_33_NumericalIntegration() { return new global::NSM.NumericalIntegration(); }
        private object Activate_34_PowerMethod() { return new global::NSM.PowerMethod(); }
        private object Activate_35_PowerMethod_2X2Calculation() { return new global::NSM.PowerMethod_2X2Calculation(); }
        private object Activate_36_PowerMethod_3X3Calculation() { return new global::NSM.PowerMethod_3X3Calculation(); }
        private object Activate_37_Secant_Method_Calcualtion() { return new global::NSM.Secant_Method_Calcualtion(); }
        private object Activate_38_Secant_Method() { return new global::NSM.Secant_Method(); }
        private object Activate_39_SEttings() { return new global::NSM.SEttings(); }
        private object Activate_40_Simpson38RuleMethod() { return new global::NSM.Simpson38RuleMethod(); }
        private object Activate_41_Simsons13RuleCalculation() { return new global::NSM.Simsons13RuleCalculation(); }
        private object Activate_42_System_of_Linear_Equations() { return new global::NSM.System_of_Linear_Equations(); }
        private object Activate_43_System_of_NonLinear_Equations() { return new global::NSM.System_of_NonLinear_Equations(); }
        private object Activate_44_TrapezoidalRule() { return new global::NSM.TrapezoidalRule(); }
        private object Activate_45_Weddel_s_Rule() { return new global::NSM.Weddel_s_Rule(); }
        private object Activate_46_Weddels_Rule_Calculation() { return new global::NSM.Weddels_Rule_Calculation(); }
        private void MapAdd_5_ObservableDictionary(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>)instance;
            var newKey = (global::System.String)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::NSM.NSM_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::NSM.NSM_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  NSM.About
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_About;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::NSM.NSM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::NSM.NSM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  NSM.Common.NavigationHelper
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::NSM.NSM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  NSM.Common.ObservableDictionary
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.DictionaryAdd = MapAdd_5_ObservableDictionary;
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::NSM.NSM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  String
                xamlType = new global::NSM.NSM_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  NSM.Bisection_Method_Calculation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_8_Bisection_Method_Calculation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  Windows.UI.Text.FontWeight
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 10:   //  System.ValueType
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 11:   //  NSM.BisectionMethod
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_11_BisectionMethod;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  NSM.FiniteInterpolation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_12_FiniteInterpolation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  NSM.GaussJacobi_calculation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_13_GaussJacobi_calculation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  NSM.GaussSeidal
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_14_GaussSeidal;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  NSM.GaussSeidal_Calculation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_15_GaussSeidal_Calculation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  NSM.Help.bisection_Help
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_16_bisection_Help;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 17:   //  NSM.Help.Finite_Help
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_17_Finite_Help;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  NSM.Help.Help_Page
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_18_Help_Page;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 19:   //  NSM.Help.Power_Help
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_19_Power_Help;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 20:   //  NSM.Help.Roots_Help
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_Roots_Help;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  NSM.Help.Seidal_Help
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_21_Seidal_Help;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 22:   //  NSM.Help.Trap_Help
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_22_Trap_Help;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  NSM.Help.Wedd_Help
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_23_Wedd_Help;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  NSM.Lagranges_Method_Calculation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_Lagranges_Method_Calculation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  NSM.Finite_Method_GetData_Page
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_25_Finite_Method_GetData_Page;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 26:   //  NSM.Newton_Backward_Method
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_26_Newton_Backward_Method;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  NSM.NewtonForwardMethod
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_27_NewtonForwardMethod;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  NSM.NR_Root_Calcuation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_28_NR_Root_Calcuation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  NSM.NRMethos
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_29_NRMethos;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 30:   //  NSM.NRRoots
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_30_NRRoots;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 31:   //  NSM.NumericalGetValuePage
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_31_NumericalGetValuePage;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 32:   //  NSM.MainPage
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_32_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  NSM.NumericalIntegration
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_33_NumericalIntegration;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  NSM.PowerMethod
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_PowerMethod;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  NSM.PowerMethod_2X2Calculation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_PowerMethod_2X2Calculation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  NSM.PowerMethod_3X3Calculation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_36_PowerMethod_3X3Calculation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  NSM.Secant_Method_Calcualtion
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_37_Secant_Method_Calcualtion;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  NSM.Secant_Method
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_38_Secant_Method;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  NSM.SEttings
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_SEttings;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  NSM.Simpson38RuleMethod
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_40_Simpson38RuleMethod;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  NSM.Simsons13RuleCalculation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_41_Simsons13RuleCalculation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  NSM.System_of_Linear_Equations
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_42_System_of_Linear_Equations;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  NSM.System_of_NonLinear_Equations
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_43_System_of_NonLinear_Equations;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 44:   //  NSM.TrapezoidalRule
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_44_TrapezoidalRule;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  NSM.Weddel_s_Rule
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_45_Weddel_s_Rule;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  NSM.Weddels_Rule_Calculation
                userType = new global::NSM.NSM_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_Weddels_Rule_Calculation;
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("DefaultViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_About_NavigationHelper(object instance)
        {
            var that = (global::NSM.About)instance;
            return that.NavigationHelper;
        }
        private object get_1_About_DefaultViewModel(object instance)
        {
            var that = (global::NSM.About)instance;
            return that.DefaultViewModel;
        }
        private object get_2_Bisection_Method_Calculation_NavigationHelper(object instance)
        {
            var that = (global::NSM.Bisection_Method_Calculation)instance;
            return that.NavigationHelper;
        }
        private object get_3_Bisection_Method_Calculation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Bisection_Method_Calculation)instance;
            return that.DefaultViewModel;
        }
        private object get_4_BisectionMethod_NavigationHelper(object instance)
        {
            var that = (global::NSM.BisectionMethod)instance;
            return that.NavigationHelper;
        }
        private object get_5_BisectionMethod_DefaultViewModel(object instance)
        {
            var that = (global::NSM.BisectionMethod)instance;
            return that.DefaultViewModel;
        }
        private object get_6_FiniteInterpolation_NavigationHelper(object instance)
        {
            var that = (global::NSM.FiniteInterpolation)instance;
            return that.NavigationHelper;
        }
        private object get_7_FiniteInterpolation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.FiniteInterpolation)instance;
            return that.DefaultViewModel;
        }
        private object get_8_GaussJacobi_calculation_NavigationHelper(object instance)
        {
            var that = (global::NSM.GaussJacobi_calculation)instance;
            return that.NavigationHelper;
        }
        private object get_9_GaussJacobi_calculation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.GaussJacobi_calculation)instance;
            return that.DefaultViewModel;
        }
        private object get_10_GaussSeidal_NavigationHelper(object instance)
        {
            var that = (global::NSM.GaussSeidal)instance;
            return that.NavigationHelper;
        }
        private object get_11_GaussSeidal_DefaultViewModel(object instance)
        {
            var that = (global::NSM.GaussSeidal)instance;
            return that.DefaultViewModel;
        }
        private object get_12_GaussSeidal_Calculation_NavigationHelper(object instance)
        {
            var that = (global::NSM.GaussSeidal_Calculation)instance;
            return that.NavigationHelper;
        }
        private object get_13_GaussSeidal_Calculation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.GaussSeidal_Calculation)instance;
            return that.DefaultViewModel;
        }
        private object get_14_bisection_Help_NavigationHelper(object instance)
        {
            var that = (global::NSM.Help.bisection_Help)instance;
            return that.NavigationHelper;
        }
        private object get_15_bisection_Help_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Help.bisection_Help)instance;
            return that.DefaultViewModel;
        }
        private object get_16_Finite_Help_NavigationHelper(object instance)
        {
            var that = (global::NSM.Help.Finite_Help)instance;
            return that.NavigationHelper;
        }
        private object get_17_Finite_Help_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Help.Finite_Help)instance;
            return that.DefaultViewModel;
        }
        private object get_18_Help_Page_NavigationHelper(object instance)
        {
            var that = (global::NSM.Help.Help_Page)instance;
            return that.NavigationHelper;
        }
        private object get_19_Help_Page_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Help.Help_Page)instance;
            return that.DefaultViewModel;
        }
        private object get_20_Power_Help_NavigationHelper(object instance)
        {
            var that = (global::NSM.Help.Power_Help)instance;
            return that.NavigationHelper;
        }
        private object get_21_Power_Help_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Help.Power_Help)instance;
            return that.DefaultViewModel;
        }
        private object get_22_Roots_Help_NavigationHelper(object instance)
        {
            var that = (global::NSM.Help.Roots_Help)instance;
            return that.NavigationHelper;
        }
        private object get_23_Roots_Help_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Help.Roots_Help)instance;
            return that.DefaultViewModel;
        }
        private object get_24_Seidal_Help_NavigationHelper(object instance)
        {
            var that = (global::NSM.Help.Seidal_Help)instance;
            return that.NavigationHelper;
        }
        private object get_25_Seidal_Help_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Help.Seidal_Help)instance;
            return that.DefaultViewModel;
        }
        private object get_26_Trap_Help_NavigationHelper(object instance)
        {
            var that = (global::NSM.Help.Trap_Help)instance;
            return that.NavigationHelper;
        }
        private object get_27_Trap_Help_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Help.Trap_Help)instance;
            return that.DefaultViewModel;
        }
        private object get_28_Wedd_Help_NavigationHelper(object instance)
        {
            var that = (global::NSM.Help.Wedd_Help)instance;
            return that.NavigationHelper;
        }
        private object get_29_Wedd_Help_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Help.Wedd_Help)instance;
            return that.DefaultViewModel;
        }
        private object get_30_Lagranges_Method_Calculation_NavigationHelper(object instance)
        {
            var that = (global::NSM.Lagranges_Method_Calculation)instance;
            return that.NavigationHelper;
        }
        private object get_31_Lagranges_Method_Calculation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Lagranges_Method_Calculation)instance;
            return that.DefaultViewModel;
        }
        private object get_32_Finite_Method_GetData_Page_NavigationHelper(object instance)
        {
            var that = (global::NSM.Finite_Method_GetData_Page)instance;
            return that.NavigationHelper;
        }
        private object get_33_Finite_Method_GetData_Page_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Finite_Method_GetData_Page)instance;
            return that.DefaultViewModel;
        }
        private object get_34_Newton_Backward_Method_NavigationHelper(object instance)
        {
            var that = (global::NSM.Newton_Backward_Method)instance;
            return that.NavigationHelper;
        }
        private object get_35_Newton_Backward_Method_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Newton_Backward_Method)instance;
            return that.DefaultViewModel;
        }
        private object get_36_NewtonForwardMethod_NavigationHelper(object instance)
        {
            var that = (global::NSM.NewtonForwardMethod)instance;
            return that.NavigationHelper;
        }
        private object get_37_NewtonForwardMethod_DefaultViewModel(object instance)
        {
            var that = (global::NSM.NewtonForwardMethod)instance;
            return that.DefaultViewModel;
        }
        private object get_38_NR_Root_Calcuation_NavigationHelper(object instance)
        {
            var that = (global::NSM.NR_Root_Calcuation)instance;
            return that.NavigationHelper;
        }
        private object get_39_NR_Root_Calcuation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.NR_Root_Calcuation)instance;
            return that.DefaultViewModel;
        }
        private object get_40_NRMethos_NavigationHelper(object instance)
        {
            var that = (global::NSM.NRMethos)instance;
            return that.NavigationHelper;
        }
        private object get_41_NRMethos_DefaultViewModel(object instance)
        {
            var that = (global::NSM.NRMethos)instance;
            return that.DefaultViewModel;
        }
        private object get_42_NRRoots_NavigationHelper(object instance)
        {
            var that = (global::NSM.NRRoots)instance;
            return that.NavigationHelper;
        }
        private object get_43_NRRoots_DefaultViewModel(object instance)
        {
            var that = (global::NSM.NRRoots)instance;
            return that.DefaultViewModel;
        }
        private object get_44_NumericalGetValuePage_NavigationHelper(object instance)
        {
            var that = (global::NSM.NumericalGetValuePage)instance;
            return that.NavigationHelper;
        }
        private object get_45_NumericalGetValuePage_DefaultViewModel(object instance)
        {
            var that = (global::NSM.NumericalGetValuePage)instance;
            return that.DefaultViewModel;
        }
        private object get_46_NumericalIntegration_NavigationHelper(object instance)
        {
            var that = (global::NSM.NumericalIntegration)instance;
            return that.NavigationHelper;
        }
        private object get_47_NumericalIntegration_DefaultViewModel(object instance)
        {
            var that = (global::NSM.NumericalIntegration)instance;
            return that.DefaultViewModel;
        }
        private object get_48_PowerMethod_NavigationHelper(object instance)
        {
            var that = (global::NSM.PowerMethod)instance;
            return that.NavigationHelper;
        }
        private object get_49_PowerMethod_DefaultViewModel(object instance)
        {
            var that = (global::NSM.PowerMethod)instance;
            return that.DefaultViewModel;
        }
        private object get_50_PowerMethod_2X2Calculation_NavigationHelper(object instance)
        {
            var that = (global::NSM.PowerMethod_2X2Calculation)instance;
            return that.NavigationHelper;
        }
        private object get_51_PowerMethod_2X2Calculation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.PowerMethod_2X2Calculation)instance;
            return that.DefaultViewModel;
        }
        private object get_52_PowerMethod_3X3Calculation_NavigationHelper(object instance)
        {
            var that = (global::NSM.PowerMethod_3X3Calculation)instance;
            return that.NavigationHelper;
        }
        private object get_53_PowerMethod_3X3Calculation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.PowerMethod_3X3Calculation)instance;
            return that.DefaultViewModel;
        }
        private object get_54_Secant_Method_Calcualtion_NavigationHelper(object instance)
        {
            var that = (global::NSM.Secant_Method_Calcualtion)instance;
            return that.NavigationHelper;
        }
        private object get_55_Secant_Method_Calcualtion_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Secant_Method_Calcualtion)instance;
            return that.DefaultViewModel;
        }
        private object get_56_Secant_Method_NavigationHelper(object instance)
        {
            var that = (global::NSM.Secant_Method)instance;
            return that.NavigationHelper;
        }
        private object get_57_Secant_Method_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Secant_Method)instance;
            return that.DefaultViewModel;
        }
        private object get_58_SEttings_NavigationHelper(object instance)
        {
            var that = (global::NSM.SEttings)instance;
            return that.NavigationHelper;
        }
        private object get_59_SEttings_DefaultViewModel(object instance)
        {
            var that = (global::NSM.SEttings)instance;
            return that.DefaultViewModel;
        }
        private object get_60_Simpson38RuleMethod_NavigationHelper(object instance)
        {
            var that = (global::NSM.Simpson38RuleMethod)instance;
            return that.NavigationHelper;
        }
        private object get_61_Simpson38RuleMethod_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Simpson38RuleMethod)instance;
            return that.DefaultViewModel;
        }
        private object get_62_Simsons13RuleCalculation_NavigationHelper(object instance)
        {
            var that = (global::NSM.Simsons13RuleCalculation)instance;
            return that.NavigationHelper;
        }
        private object get_63_Simsons13RuleCalculation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Simsons13RuleCalculation)instance;
            return that.DefaultViewModel;
        }
        private object get_64_System_of_Linear_Equations_NavigationHelper(object instance)
        {
            var that = (global::NSM.System_of_Linear_Equations)instance;
            return that.NavigationHelper;
        }
        private object get_65_System_of_Linear_Equations_DefaultViewModel(object instance)
        {
            var that = (global::NSM.System_of_Linear_Equations)instance;
            return that.DefaultViewModel;
        }
        private object get_66_System_of_NonLinear_Equations_NavigationHelper(object instance)
        {
            var that = (global::NSM.System_of_NonLinear_Equations)instance;
            return that.NavigationHelper;
        }
        private object get_67_System_of_NonLinear_Equations_DefaultViewModel(object instance)
        {
            var that = (global::NSM.System_of_NonLinear_Equations)instance;
            return that.DefaultViewModel;
        }
        private object get_68_TrapezoidalRule_NavigationHelper(object instance)
        {
            var that = (global::NSM.TrapezoidalRule)instance;
            return that.NavigationHelper;
        }
        private object get_69_TrapezoidalRule_DefaultViewModel(object instance)
        {
            var that = (global::NSM.TrapezoidalRule)instance;
            return that.DefaultViewModel;
        }
        private object get_70_Weddel_s_Rule_NavigationHelper(object instance)
        {
            var that = (global::NSM.Weddel_s_Rule)instance;
            return that.NavigationHelper;
        }
        private object get_71_Weddel_s_Rule_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Weddel_s_Rule)instance;
            return that.DefaultViewModel;
        }
        private object get_72_Weddels_Rule_Calculation_NavigationHelper(object instance)
        {
            var that = (global::NSM.Weddels_Rule_Calculation)instance;
            return that.NavigationHelper;
        }
        private object get_73_Weddels_Rule_Calculation_DefaultViewModel(object instance)
        {
            var that = (global::NSM.Weddels_Rule_Calculation)instance;
            return that.DefaultViewModel;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::NSM.NSM_XamlTypeInfo.XamlMember xamlMember = null;
            global::NSM.NSM_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "NSM.About.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.About");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_0_About_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.About.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.About");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_1_About_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Bisection_Method_Calculation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Bisection_Method_Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_2_Bisection_Method_Calculation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Bisection_Method_Calculation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Bisection_Method_Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_3_Bisection_Method_Calculation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.BisectionMethod.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.BisectionMethod");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_4_BisectionMethod_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.BisectionMethod.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.BisectionMethod");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_5_BisectionMethod_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.FiniteInterpolation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.FiniteInterpolation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_6_FiniteInterpolation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.FiniteInterpolation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.FiniteInterpolation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_7_FiniteInterpolation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.GaussJacobi_calculation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.GaussJacobi_calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_8_GaussJacobi_calculation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.GaussJacobi_calculation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.GaussJacobi_calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_9_GaussJacobi_calculation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.GaussSeidal.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.GaussSeidal");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_10_GaussSeidal_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.GaussSeidal.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.GaussSeidal");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_11_GaussSeidal_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.GaussSeidal_Calculation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.GaussSeidal_Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_12_GaussSeidal_Calculation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.GaussSeidal_Calculation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.GaussSeidal_Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_13_GaussSeidal_Calculation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.bisection_Help.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.bisection_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_14_bisection_Help_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.bisection_Help.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.bisection_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_15_bisection_Help_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Finite_Help.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Finite_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_16_Finite_Help_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Finite_Help.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Finite_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_17_Finite_Help_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Help_Page.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Help_Page");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_18_Help_Page_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Help_Page.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Help_Page");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_19_Help_Page_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Power_Help.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Power_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_20_Power_Help_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Power_Help.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Power_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_21_Power_Help_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Roots_Help.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Roots_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_22_Roots_Help_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Roots_Help.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Roots_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_23_Roots_Help_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Seidal_Help.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Seidal_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_24_Seidal_Help_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Seidal_Help.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Seidal_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_25_Seidal_Help_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Trap_Help.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Trap_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_26_Trap_Help_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Trap_Help.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Trap_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_27_Trap_Help_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Wedd_Help.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Wedd_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_28_Wedd_Help_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Help.Wedd_Help.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Help.Wedd_Help");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_29_Wedd_Help_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Lagranges_Method_Calculation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Lagranges_Method_Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_30_Lagranges_Method_Calculation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Lagranges_Method_Calculation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Lagranges_Method_Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_31_Lagranges_Method_Calculation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Finite_Method_GetData_Page.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Finite_Method_GetData_Page");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_32_Finite_Method_GetData_Page_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Finite_Method_GetData_Page.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Finite_Method_GetData_Page");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_33_Finite_Method_GetData_Page_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Newton_Backward_Method.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Newton_Backward_Method");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_34_Newton_Backward_Method_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Newton_Backward_Method.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Newton_Backward_Method");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_35_Newton_Backward_Method_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NewtonForwardMethod.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NewtonForwardMethod");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_36_NewtonForwardMethod_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NewtonForwardMethod.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NewtonForwardMethod");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_37_NewtonForwardMethod_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NR_Root_Calcuation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NR_Root_Calcuation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_38_NR_Root_Calcuation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NR_Root_Calcuation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NR_Root_Calcuation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_39_NR_Root_Calcuation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NRMethos.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NRMethos");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_40_NRMethos_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NRMethos.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NRMethos");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_41_NRMethos_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NRRoots.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NRRoots");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_42_NRRoots_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NRRoots.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NRRoots");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_43_NRRoots_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NumericalGetValuePage.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NumericalGetValuePage");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_44_NumericalGetValuePage_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NumericalGetValuePage.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NumericalGetValuePage");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_45_NumericalGetValuePage_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NumericalIntegration.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NumericalIntegration");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_46_NumericalIntegration_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.NumericalIntegration.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.NumericalIntegration");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_47_NumericalIntegration_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.PowerMethod.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.PowerMethod");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_48_PowerMethod_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.PowerMethod.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.PowerMethod");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_49_PowerMethod_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.PowerMethod_2X2Calculation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.PowerMethod_2X2Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_50_PowerMethod_2X2Calculation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.PowerMethod_2X2Calculation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.PowerMethod_2X2Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_51_PowerMethod_2X2Calculation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.PowerMethod_3X3Calculation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.PowerMethod_3X3Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_52_PowerMethod_3X3Calculation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.PowerMethod_3X3Calculation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.PowerMethod_3X3Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_53_PowerMethod_3X3Calculation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Secant_Method_Calcualtion.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Secant_Method_Calcualtion");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_54_Secant_Method_Calcualtion_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Secant_Method_Calcualtion.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Secant_Method_Calcualtion");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_55_Secant_Method_Calcualtion_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Secant_Method.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Secant_Method");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_56_Secant_Method_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Secant_Method.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Secant_Method");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_57_Secant_Method_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.SEttings.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.SEttings");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_58_SEttings_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.SEttings.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.SEttings");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_59_SEttings_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Simpson38RuleMethod.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Simpson38RuleMethod");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_60_Simpson38RuleMethod_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Simpson38RuleMethod.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Simpson38RuleMethod");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_61_Simpson38RuleMethod_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Simsons13RuleCalculation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Simsons13RuleCalculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_62_Simsons13RuleCalculation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Simsons13RuleCalculation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Simsons13RuleCalculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_63_Simsons13RuleCalculation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.System_of_Linear_Equations.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.System_of_Linear_Equations");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_64_System_of_Linear_Equations_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.System_of_Linear_Equations.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.System_of_Linear_Equations");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_65_System_of_Linear_Equations_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.System_of_NonLinear_Equations.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.System_of_NonLinear_Equations");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_66_System_of_NonLinear_Equations_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.System_of_NonLinear_Equations.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.System_of_NonLinear_Equations");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_67_System_of_NonLinear_Equations_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.TrapezoidalRule.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.TrapezoidalRule");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_68_TrapezoidalRule_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.TrapezoidalRule.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.TrapezoidalRule");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_69_TrapezoidalRule_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Weddel_s_Rule.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Weddel_s_Rule");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_70_Weddel_s_Rule_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Weddel_s_Rule.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Weddel_s_Rule");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_71_Weddel_s_Rule_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Weddels_Rule_Calculation.NavigationHelper":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Weddels_Rule_Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "NavigationHelper", "NSM.Common.NavigationHelper");
                xamlMember.Getter = get_72_Weddels_Rule_Calculation_NavigationHelper;
                xamlMember.SetIsReadOnly();
                break;
            case "NSM.Weddels_Rule_Calculation.DefaultViewModel":
                userType = (global::NSM.NSM_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NSM.Weddels_Rule_Calculation");
                xamlMember = new global::NSM.NSM_XamlTypeInfo.XamlMember(this, "DefaultViewModel", "NSM.Common.ObservableDictionary");
                xamlMember.Getter = get_73_Weddels_Rule_Calculation_DefaultViewModel;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::NSM.NSM_XamlTypeInfo.XamlSystemBaseType
    {
        global::NSM.NSM_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::NSM.NSM_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::NSM.NSM_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::NSM.NSM_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


